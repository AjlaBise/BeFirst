<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        qWENi/8DGH3RY+xRBXEAAAAASUVORK5CYII=
</value>
  </data>
</root>